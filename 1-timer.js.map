{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import '../css/styles.css';\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: Date.now(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < Date.now()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        theme: 'dark',\n        backgroundColor: '#EF4040',\n        icon: 'fa-solid fa-triangle-exclamation'\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  }\n};\nlet addLeadingZero = function (value) {\n  return value.toString().padStart(2, '0');\n};\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nlet userSelectedDate;\nlet startButton = document.querySelector('button');\nlet daysField = document.querySelector('span[data-days]');\nlet hoursField = document.querySelector('span[data-hours]');\nlet minutesField = document.querySelector('span[data-minutes]');\nlet secondsField = document.querySelector('span[data-seconds]');\nlet datePicker = flatpickr('#datetime-picker', options);\nstartButton.disabled = true;\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  datePicker.input.disabled = true;\n  const promise = new Promise((resolve, reject) => {\n    setInterval(() => {\n      let datesDifference = convertMs(userSelectedDate - Date.now());\n      daysField.textContent = datesDifference.days;\n      hoursField.textContent = datesDifference.hours;\n      minutesField.textContent = datesDifference.minutes;\n      secondsField.textContent = datesDifference.seconds;\n    }, 1000);\n  });\n  promise.finally(() => {\n    startButton.disabled = false;\n    datePicker.input.disabled = false;\n  });\n});\n"],"names":["options","selectedDates","userSelectedDate","iziToast","startButton","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","daysField","hoursField","minutesField","secondsField","datePicker","flatpickr","resolve","reject","datesDifference"],"mappings":"2FAOA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,KAAK,IAAK,EACvB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAmBD,EAAc,CAAC,EAC9BC,EAAmB,KAAK,OAC1BC,EAAS,KAAK,CACZ,QAAS,qCACT,MAAO,OACP,gBAAiB,UACjB,KAAM,kCACd,CAAO,EACDC,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EACA,IAAIC,EAAiB,SAAUC,EAAO,CACpC,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,EACA,SAASC,EAAUC,EAAI,CAKrB,MAAMC,EAAOJ,EAAe,KAAK,MAAMG,EAAK,KAAG,CAAC,EAC1CE,EAAQL,EAAe,KAAK,MAAOG,EAAK,MAAO,IAAI,CAAC,EACpDG,EAAUN,EAAe,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,CAAC,EACjEI,EAAUP,EACd,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAEE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,IAAIV,EACAE,EAAc,SAAS,cAAc,QAAQ,EAC7CS,EAAY,SAAS,cAAc,iBAAiB,EACpDC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAe,SAAS,cAAc,oBAAoB,EAC1DC,EAAe,SAAS,cAAc,oBAAoB,EAC1DC,EAAaC,EAAU,mBAAoBlB,CAAO,EACtDI,EAAY,SAAW,GACvBA,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBa,EAAW,MAAM,SAAW,GACZ,IAAI,QAAQ,CAACE,EAASC,IAAW,CAC/C,YAAY,IAAM,CAChB,IAAIC,EAAkBd,EAAUL,EAAmB,KAAK,IAAK,CAAA,EAC7DW,EAAU,YAAcQ,EAAgB,KACxCP,EAAW,YAAcO,EAAgB,MACzCN,EAAa,YAAcM,EAAgB,QAC3CL,EAAa,YAAcK,EAAgB,OAC5C,EAAE,GAAI,CACX,CAAG,EACO,QAAQ,IAAM,CACpBjB,EAAY,SAAW,GACvBa,EAAW,MAAM,SAAW,EAChC,CAAG,CACH,CAAC"}